user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {
	worker_connections 768;
	multi_accept on;
}

http {
	include /etc/nginx/mime.types;
	server {
		listen 443 ssl;

		root ${NGINX_VOLUME};

		index html/base.html;
		server_name _; # il faudra y mettre le nom de domaine quand il y en aura un, pour l'instant il accepte tous le monde

		access_log /var/log/nginx/access.log;
		error_log /var/log/nginx/error.log;

		ssl_certificate /etc/nginx/crt.pem;
		ssl_certificate_key /etc/nginx/privkey.pem;
		ssl_protocols TLSv1.2 TLSv1.3;

		location /png/ {
			try_files $uri $uri/ =404;
		}

		location /js/ {
			try_files $uri $uri/ =404;
		}

		location /css/ {
			try_files $uri $uri/ =404;
		}
	
		location /json/ {
			try_files $uri $uri/ =404;
		}

		location /api/ {
			proxy_pass http://django-API:8000;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;

			# Configuration CORS pour toutes les méthodes
			add_header Access-Control-Allow-Origin $http_origin always;
			add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
			add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-token" always;
			add_header Access-Control-Allow-Credentials "true" always;

			# Réponse pour les requêtes OPTIONS (preflight requests)
			if ($request_method = OPTIONS) {
				add_header Access-Control-Allow-Origin $http_origin always;
				add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, DELETE, PUT" always;
				add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
				add_header Access-Control-Allow-Credentials "true" always;
				add_header Content-Length 0;
				add_header Content-Type text/plain;
				return 204;
			}
		}

		location / {
			try_files $uri $uri/ /html/base.html;
		}
	}
}
